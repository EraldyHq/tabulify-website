---json
{
    "aliases": [
        { "path": ":howto:sqlite:tabli_create_table_with_dependencies" }
    ],
    "canonical": ":howto:database:table_create_with_dependencies",
    "description": "This howto will show you how to copy the data definition of all SQL tables from a star\/snowflake schema.",
    "name": "Duplicate a schema ",
    "page_id": "9ufbppuf8y3ivtqt863n1",
    "title": "How to copy the data definition of all tables from a star\/snowflake schema"
}
---

====== Tabli - How to copy the data definition of all tables from a star/snowflake schema ======


===== About =====
This [[..:howto|Howto]] will show you how to copy the [[docs:resource:structure|data definition]] of all [[docs:resource:table|SQL tables]] from a <icon name="twemoji:snowflake"/> star/snowflake schema by using the [[docs:tabli:data:create|Tabli data create command]].


<note important>
This command does not copy the data. It just [[docs:op:create|creates]] the structure (ie it performs a SQL ''CREATE'' statement). If you want to copy the data, use the [[docs:tabli:data:transfer|tabli data transfer command]] instead.
</note>


===== Steps =====
==== Prerequisites ====
You should have ''Tabulify'' installed on your computer. [[howto:getting_started:1_install]]

==== Select the fact table ====

The trick to copy a star/snowflake schema is:
  * to give the fact table (ie the table at the center of the star/snowflake schema) to the [[docs:tabli:data:create|Tabli table create command]]
  * and to ask to create it with its dependencies.


==== Create the fact table with its dependencies   ====

<unit display="none">
Delete the target destination
<code bash>
tabli data drop --not-strict *@sqlite
</code>
</unit>


The below command will [[docs:op:create|create]]:
  * the table ''store_sales'' from the [[docs:system:tpcds|tpcds]] system. This is the fact table of the tpcds store schema.
  * with all its dependencies (all the foreign tables)
  * into the [[docs:connection:default|Sqlite Howto connection]] with the prefix ''tpc_'' using the [[:docs:resource:logicalname|logical name]] of the source

  * with the [[docs:tabli:data:create|tabli data create]] command.
<unit>
<code bash>
# in bash, you need to escape the $ with \ sign so that it's not seen as a bash variable
tabli data create --with-dependencies store_sales@tpcds tpc_\${logicalName}@sqlite
</code>
<console>
source                         target                              
----------------------------   ---------------------------------   
date_dim@tpcds                 tpc_date_dim@sqlite                 
household_demographics@tpcds   tpc_household_demographics@sqlite   
item@tpcds                     tpc_item@sqlite                     
income_band@tpcds              tpc_income_band@sqlite              
customer_demographics@tpcds    tpc_customer_demographics@sqlite    
store_sales@tpcds              tpc_store_sales@sqlite              
customer_address@tpcds         tpc_customer_address@sqlite         
customer@tpcds                 tpc_customer@sqlite                 
promotion@tpcds                tpc_promotion@sqlite                
time_dim@tpcds                 tpc_time_dim@sqlite                 
store@tpcds                    tpc_store@sqlite
</console>
</unit>

==== List the created tables ====


With the [[docs:tabli:data:list|tabli data list]] command, we can list the tables created with the ''tpc'' prefix.

<unit>
<code bash>
tabli data list -a name -a count tpc*@sqlite
</code>
<console>
name                         count   
--------------------------   -----   
tpc_customer                     0   
tpc_customer_address             0   
tpc_customer_demographics        0   
tpc_date_dim                     0   
tpc_household_demographics       0   
tpc_income_band                  0   
tpc_item                         0   
tpc_promotion                    0   
tpc_store                        0   
tpc_store_sales                  0   
tpc_time_dim                     0
</console>
</unit>

==== Next ====

You can fill them with generated data.


[[howto:generator:fill_schema|How to fill a schema with generated data]]


