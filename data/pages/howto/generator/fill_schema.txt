---json
{
    "description": "This how-to will show you how to use the tabli fill command to  fill all the tables of a schema with generated data.",
    "low_quality_page": "false",
    "page_id": "i8wii619uui2h456ddwwf",
    "title": "How to fill a database relational schema with generated data and tabli"
}
---
====== Tabulify - How to fill a database relational schema with generated data and Tabli ======


===== About =====
This [[..:howto|how-to]] will show you how to use the [[docs:tabli:data:fill|tabli fill]] command to <icon name="mdi:format-color-fill"/> [[docs:op:fill|fill]] all the [[docs:resource:table|tables]] of a [[docs:resource:schema|schema]] with generated data.


===== Steps =====
==== Prerequisites ====

You should have ''Tabulify'' installed on your computer.

<btn>
[[howto:getting_started:1_install]]
</btn>

==== Creation of the schema ====


You could:
  * follow this howto:  [[howto:sqlite:create_table_with_dependencies|How to copy a schema]]
  * or execute the following statements:
<unit>
<code bash >
# drop all tables in sqlite
tabli data drop --not-strict *@sqlite
# Create the store_sales star schema (ie the store_sales and its dependencies tables)
tabli data create --with-dependencies store_sales@tpcds tpc_\${logicalName}@sqlite
</code>
</unit>

==== Schema Listing ====

You should now see in the [[howto:sqlite:connection|Sqlite HowTo connection]] the following tables.

<unit>
<code bash>
tabli data list --with-dependencies tpc_store_sales@sqlite
</code>
<console>
path                         
--------------------------   
tpc_customer                 
tpc_customer_address         
tpc_customer_demographics    
tpc_date_dim                 
tpc_household_demographics   
tpc_income_band              
tpc_item                     
tpc_promotion                
tpc_store                    
tpc_store_sales              
tpc_time_dim
</console>
</unit>

==== Schema Filling  ====

Let's fill the table with the [[:docs:tabli:data:fill|tabli data fill]] command that applies the [[:docs:op:fill|fill operation]].
<unit>
<code bash>
tabli data fill --with-dependencies tpc_store_sales@sqlite
</code>
<console>
Source                              Target                              Latency (ms)   Row Count   Error   Message   
---------------------------------   ---------------------------------   ------------   ---------   -----   -------   
tpc_customer@memgen                 tpc_customer@sqlite                 11             100                           
tpc_customer_address@memgen         tpc_customer_address@sqlite         17             100                           
tpc_customer_demographics@memgen    tpc_customer_demographics@sqlite    13             100                           
tpc_date_dim@memgen                 tpc_date_dim@sqlite                 29             100                           
tpc_household_demographics@memgen   tpc_household_demographics@sqlite   9              100                           
tpc_income_band@memgen              tpc_income_band@sqlite              26             100                           
tpc_item@memgen                     tpc_item@sqlite                     20             100                           
tpc_promotion@memgen                tpc_promotion@sqlite                13             100                           
tpc_store@memgen                    tpc_store@sqlite                    20             100                           
tpc_store_sales@memgen              tpc_store_sales@sqlite              15             100                           
tpc_time_dim@memgen                 tpc_time_dim@sqlite                 19             100
</console>
</unit>

==== Looking at the result ====

The [[:docs:op:fill|fill operation]] will by default enforce:
  * [[:docs:resource:fkey|foreign key constraint]]
  * and [[:docs:common:data_type|data type constraint]]

<unit >
<code bash>
tabli data head --limit 10 date_dim@sqlite
</code>
<console>
The first 10 rows of the data resource (date_dim@sqlite):
d_date_sk   d_date_id   d_date       d_month_seq   d_week_seq   d_quarter_seq   d_year   d_dow   d_moy   d_dom   d_qoy   d_fy_year   d_fy_quarter_seq   d_fy_week_seq   d_day_name   d_quarter_name   d_holiday   d_weekend   d_following_holiday   d_first_dom   d_last_dom   d_same_day_ly   d_same_day_lq   d_current_day   d_current_week   d_current_month   d_current_quarter   d_current_year
---------   ---------   ----------   -----------   ----------   -------------   ------   -----   -----   -----   -----   ---------   ----------------   -------------   ----------   --------------   ---------   ---------   -------------------   -----------   ----------   -------------   -------------   -------------   --------------   ---------------   -----------------   --------------
        1   a           2020-12-06             8            7               8        3       5       8       2       2           1                  3               2   j            e                r           w           q                               8            4               9               0   x               g                b                 k                   i
        2   b           2020-12-04             0            6               7        0       1       5       6       5           4                  4               4   t            n                h           t           l                               3            8               4               5   b               j                x                 l                   a
        3   c           2020-12-12             5            3               1        7       9       0       0       7           9                  5               9   m            c                c           b           g                               1            0               7               1   o               h                h                 f                   a
        4   d           2020-12-12             9            4               9        9       0       4       9       2           8                 10               9   b            l                b           d           o                               8            2              10               1   d               h                k                 n                   n
        5   e           2020-12-02             4            8               3        6       2       2       3       8           8                  8               8   i            e                e           g           k                               3            1               8               0   b               l                w                 a                   p
        6   f           2020-12-09             8            2               0       10       3       6       2       0           5                  2               6   i            u                c           i           o                               4            1               3               5   e               q                p                 t                   v
        7   g           2020-12-10             5           10              10        8       6       2       1       3          10                  7               2   e            o                h           h           a                               9            5               8               8   q               p                k                 n                   f
        8   h           2020-12-06             1            6              10        7       7       5       5       2           1                 10               1   t            w                f           o           k                              10           10               4               4   y               j                m                 j                   h
        9   i           2020-12-06             6            2               8        1       5       1       5       3           6                  9              10   s            q                l           v           d                               6            5               0               6   o               f                v                 n                   x
       10   j           2020-12-03             6            8               6        8       6       0       3       7           9                  6               2   v            s                w           o           a                               1           10               1               6   w               n                v                 x                   q
</console>
</unit>



==== Controlling the generated data with Generator ====

A [[docs:resource:generator|generator]] is a [[docs:resource:file|file]] that contains the data generation definition.

For each column, a [[docs:generator:column|column data generator]] is defined that control the data generated.

The below [[docs:resource:generator|generator]] generates one year of data with two columns:
  * ''d_date'' that has a [[docs:generator:sequence|date sequence generator]] to generate ''date'' data from ''2001-01-01'' and upwards
  * ''dyear'' that has a [[docs:generator:expression|expression generator]] that extracts the ''year'' of the ''d_date'' column.

<unit>
<file yaml date_dim_2001--datagen.yml>
LogicalName: date_dim
Columns:
  - name: d_date
    type: date
    comment: A column with a sequence generator that generates a date sequence from 2001-01-01 and after
    DataGenerator:
      type: sequence
      start: 2001-01-01
      step: 1
  - name: d_year
    precision: 4
    comment: A column with a expression generator that extract the year from the date column
    DataGenerator:
      type: expression
      ColumnParents: d_date
      expression: "x.getFullYear()"

</file>
</unit>

This [[docs:resource:generator|generator]] is also a [[docs:resource:content|content resource]] and therefore you can use it as any [[docs:resource:tabular|tabular resource]] and take a look at the data generated

<unit>
<code bash>
tabli data head date_dim_2001--datagen.yml@howto
</code>
<console>
The first 10 rows of the data resource (date_dim_2001--datagen.yml@howto):
d_date       d_year
----------   ------
2001-01-01   2001
2001-01-02   2001
2001-01-03   2001
2001-01-04   2001
2001-01-05   2001
2001-01-06   2001
2001-01-07   2001
2001-01-08   2001
2001-01-09   2001
2001-01-10   2001
</console>
</unit>

==== Fill with generators ====

After having created a generator for the ''date_dim'' [[docs:resource:table|table]], we can pass it to the [[docs:tabli:data:fill|data fill command]] with the ''--generator-selector'' option to make the data generation more controled.
<unit >
<code bash>
tabli data fill --generator-selector date_dim_2001--datagen.yml@howto   *@sqlite
</code>
<note>
As the option ''generator-selector'' is a [[docs:resource:selector|resource selector]], you can create a [[docs:resource:generator|generator]] for each table where you want to customize the generated data and select them with the [[docs:common:globbing|glob pattern]].
</note>
Output:
<console>
Source                          Target                          Latency (ms)   Row Count   Error   Message
-----------------------------   -----------------------------   ------------   ---------   -----   -------
call_center@memgen              call_center@sqlite              131            1000
catalog_page@memgen             catalog_page@sqlite             49             1000
catalog_sales@memgen            catalog_sales@sqlite            130            1000
customer@memgen                 customer@sqlite                 71             1000
customer_address@memgen         customer_address@sqlite         64             1000
customer_demographics@memgen    customer_demographics@sqlite    84             1000
date_dim@memgen                 date_dim@sqlite                 1794           1000
household_demographics@memgen   household_demographics@sqlite   32             1000
income_band@memgen              income_band@sqlite              30             1000
item@memgen                     item@sqlite                     145            1000
promotion@memgen                promotion@sqlite                77             1000
ship_mode@memgen                ship_mode@sqlite                42             1000
store@memgen                    store@sqlite                    108            1000
store_sales@memgen              store_sales@sqlite              94             1000
time_dim@memgen                 time_dim@sqlite                 53             1000
warehouse@memgen                warehouse@sqlite                79             1000
web_page@memgen                 web_page@sqlite                 66             1000
web_sales@memgen                web_sales@sqlite                131            1000
web_site@memgen                 web_site@sqlite                 122            1000
</console>
</unit>


