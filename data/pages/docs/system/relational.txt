====== Tabulify - Relational Database ======


===== About =====
''Tabulify'' supports ''relational'' [[database|database]] as a [[docs:system:system|system]] type.


You can:
  * [[docs:tabli:connection:start|add/create/update database connections parameters]]
  * [[docs:tabli:data:query|perform operation on a SQL query]]
  * [[docs:tabli:data:start|perform operation on a table]]
  * [[howto:sqlite:create_table_with_dependencies|perform operation on a schema]]
  * [[docs:resource:dependency|manage foreign keys (ie relation between tables)]]


<note tip>
[[docs:system:sample_schema|Sample relational schema]] are also available to showcase or test rapidly a development environment.
</note>

===== Supported Relational Databases =====

For the supported database, ''Tabulify'' introduces a layer that:
  * corrects the driver mistake
  * and/or implements the database SQL dialect

List:
  * [[docs:system:sqlite:sqlite]]
  * [[docs:system:postgres:postgres]]
  * [[docs:system:oracle:oracle]]
  * [[docs:system:mysql:mysql]]
  * [[:docs:system:sqlserver|]]
  * all relational databases that:
    * provides a JDBC driver, 
    * supports [[wp>SQL#Interoperability_and_standardization|ANSI SQL]]


The most controversial part being the [[:docs:op:upsert|upsert sql statement]]:
```sql
insert into "howto"."d_category" ("cat_id", "cat_desc", "load_timestamp")
values (?, ?, ?) 
on duplicate key update "load_timestamp" = values ("load_timestamp")
```
If you want a relational database that does not support this syntax, [[:contact|contact us]].





===== Attribute / Parameters =====

All relational database system supports the [[:docs:connection:attribute|standard connection attributes]] 
and the following attributes:

^ Name ^ Description ^ Default value ^ 
| BUILDER_CACHE_ENABLED | A builder cache | true |
| NAME_QUOTING_ENABLED | Enable quoting of SQL name identifier | true |

==== BUILDER_CACHE_ENABLED ====

`BUILDER_CACHE_ENABLED` defines if the `builder cache` is used or not.

The builder cache is used to cache the building of relation object such as table, view.

Why? Because a relation object (table, views, ...) may have [[:docs:resource:dependency|dependencies]], 
building them each time as a significative impact as it's a recursive process.


==== NAME_QUOTING_ENABLED ====
Name quoting of quoted identifier is adding a quotation marks at the end and the beginning of the words to:
  * make it case sensitive
  * allow characters such as space, number as first index


Relational databases have different behavior around it. By default, we enable it so 
that SQL Developer does not have to type in uppercase.

With `NAME_QUOTING_ENABLED`, you can disable this feature.

Remark that we may disable this feature by database. 

For instance, we do for [[docs:system:oracle:oracle|Oracle]]. Why ? 
Because it requires you to put always the quotation mark even in a `SQL SELECT` which is crazy. You can't write `select cat_id`, you need to write `select "cat_id"`
<blockquote>
If you name a schema object using a quoted identifier, then you must use the double quotation marks whenever you refer to that object.
<cite>[[https://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/Database-Object-Names-and-Qualifiers.html|Oracle Ref]]</cite>
</blockquote>
