---json
{
    "page_id": "6zb02fkldx4qhbpakxn1p"
}
---
====== Tabli - Data Transfer Command (copy, download, load, move, rename) ======


===== About =====
The ''transfer'' command supports all [[docs:op:transfer|transfer operations]] between a [[docs:flow:source|source data resource]] and a [[docs:flow:target|target data resource]]

<note>
The below commands are all command aliases that set the ''transfer-operation'' [[docs:tabli:option|option]] to their respective value and call the ''transfer'' command.
  * [[move|move]]
  * [[copy|copy]]
  * [[upsert|upsert]]
  * [[insert|insert]]
  * [[update|update]]
  * [[delete|delete]]
</note>


===== Syntax =====

<unit>
<code bash>
tabli data transfer -h
</code>
<console>
Tabli data transfer
===================

Transfer one or more data resources.



Examples
--------

 1 - To download the table `time` from the data store `sqlite` into the file `time.csv`, you would execute


        tabli data transfer time@sqlite time.csv


 2 - To download all the table that starts with `dim` from the data store `oracle` into the directory `dim`, you would execute


        tabli data transfer dim*@oracle dim


 3 - To download the data of the query defined in the file `QueryToDownload.sql` and executed against the data store `sqlite` into the file `QueryData.csv`, you would execute the following command:


        tabli data transfer (QueryToDownload.sql)@sqlite QueryData.csv


 4 - To download the data of all query defined in all `sql` files of the current directory, execute them against the data store `sqlite` and save the results into the directory `result`, you would execute the following command:


        tabli data transfer (*.sql)@sqlite result


 5 - Transfer the result of the query `top10product` from sqlite to the table `top10product` of sql server


        tabli data transfer (top10product.sql)@sqlite @sqlserver 




Syntax
------


    tabli data transfer [options|flags] <source-selector> <target-data-uri>


where:


  Arguments:

    <source-selector>                                           A data selector that select the data resources to transfer

    <target-data-uri>                                           defines the target data URI destination (Example: [table]@connection). If the target data uri has no name, the name will be the name of the source.


  Cross Data Transfer Options:

    -bs,--buffer-size <BUFFER_SIZE>                             defines the size of the memory buffer between the source and target threads

    -mdu,--metrics-data-uri <METRICS_DATA_URI>                  defines a target data uri where the data metrics should be exported

    -sfs,--source-fetch-size <SOURCE_FETCH_SIZE>                defines the size of the network message from the source to fetch the data

    -so,--source-operation <SOURCE_OPERATION>                   defines the data operation (drop or truncate) on the source after transfer. Note: A `move` operation will drop the source.

    -sg,--step-granularity <STEP_GRANULARITY>                   defines the granularity of the transfer

    -out,--step-output <STEP_OUTPUT>                            The resource that is passed as output

    -tbs,--target-batch-size <TARGET_BATCH_SIZE>                defines the batch size against the target data resource

    -tcf,--target-commit-frequency <TARGET_COMMIT_FREQUENCY>    defines the commit frequency in number of batches against the target data resource

    -to,--target-operation <TARGET_OPERATION>                   defines the data operations (replace, truncate) on the existing target before transfer.

    -twc,--target-worker-count <TARGET_WORKER_COUNT>            defines the target number of thread against the target datastore

    -tcm,--transfer-column-mapping <TRANSFER_COLUMN_MAPPING>    defines the column mapping between the source and the target

    -tmm,--transfer-mapping-method <TRANSFER_MAPPING_METHOD>    defines the method used to map the source columns to the target columns

    -op,--transfer-operation <TRANSFER_OPERATION>               defines the transfer operation (insert, update, delete, upsert, merge, move, copy). Default to `copy` for a file system and `insert` for a database.

    -wbv,--with-bind-variables                                  defines if bind variables are used in the SQL statement


  Data Definition Options:

    -sa,--source-attribute <attributeName=value>                Set a source data resource attribute

    -ta,--target-attribute <attributeName=value>                Set a target data resource attribute


  Options:

    -t,--type <mediaType|mimeType|extensionFile>                The type of the resource

    -vc,--virtual-column <columnName=resourceAttributeName>     Add a virtual column with the value of a data resource attribute


  Selection Options:

    -wd,--with-dependencies                                     If set, the dependencies will be also selected


  Global Options:

    -vf,--conf <path>                                           The path to a configuration file

    -e,--env <env>                                              The name of the environment

    -h,--help                                                   Print this help

    -l,--log-level <error|warning|tip|info|fine>                Set the log level

    -ns,--not-strict                                            A minor error will not stop the process.

    -odu,--output-data-uri <outputDataUri>                      defines the output data uri for the feedback data (default: console)

    -oo,--output-operation <dataOperation>                      defines the data operations (replace, truncate) on an existing output resource before transfer.

    -oop,--output-transfer-operation <transferOperation>        defines the output transfer operation (insert, update, merge, copy). Default to `copy` for a file system and `insert` for a database.

    -pp,--passphrase <passphrase>                               A passphrase (master password) to decrypt the encrypted vault values (Env: TABLI_PASSPHRASE)

    -ph,--project-home <path>                                   The project home (default to the .tabli.yml file directory)

    -v,--version                                                Print version information
</console>
</unit>
