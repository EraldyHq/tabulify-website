---json
{
    "aliases": [
        { "path": ":docs:tabli:data:fill" }
    ],
    "page_id": "tgllzet2zl6q9sjv9157a"
}
---
====== Tabul - Data Fill (with generated data) ======


===== About =====
The [[..:tabul|Tabul]] ''data fill'' [[docs:tabul:command|command]] from the [[start|table module]] insert [[docs:generator:generator|generated]] data into a [[docs:resource:content|content resource (file, sql table)]].


===== How do the fill command map generators to target ? =====

If you specify the `--generator-selector`, you may select more than one [[:docs:resource:generator|generator]].

These generators are mapped to the target:
  * by their [[:docs:resource:logicalname|logical name]] for a multi-fill operation
  * by position for a mono-fill operation (one generator, one target)


===== Syntax =====
<unit>
<code bash>
tabul data fill --help
</code>
<console>
Tabul data fill
===============

Load generated data into data resources.

You select the data resources to be filled with:
   * the data selector argument (`target-selector...`)
   * and optionally the dependency option (`--with-dependencies`)

For more control on the data generated, you can add the data resource generators (`*--datagen.yml`)
by selecting them with the generator selector option (--generator-selector)

This is an alias to the `transfer` command where:
  * the targets are the selected data resources
  * the sources are generated from the generator data resources and/of target metadatas

The default transfer operation is `upsert`.



Examples
--------

 1 - To load the table `D_TIME` from the connection `sqlite` with auto-generated data:


    tabul data fill D_TIME@sqlite


 2 - To load the table `D_TIME` with the data generation file `D_TIME--datagen.yml` present in the current directory:


    tabul data fill --generator-selector D_TIME D_TIME@connection


 3 - To load all data in the whole schema with the data generation file in the dir directory:


    tabul data fill --generator-selector dir/* *@connection


 4 - Load auto generated data into the table F_SALES and its dependencies


    tabul data fill--with-dependencies F_SALES@sqlite




Syntax
------


    tabul data fill [options|flags] <target-selector...>


where:


  Arguments:

    <target-selector...>                                        One or more data selectors that will select the target data resources to be filled.


  Cross Data Transfer Options:

    -bs,--buffer-size <BUFFER_SIZE>                             defines the size of the memory buffer between the source and target threads

    -mdu,--metrics-data-uri <METRICS_DATA_URI>                  defines a target data uri where the data metrics should be exported

    -sfs,--source-fetch-size <SOURCE_FETCH_SIZE>                defines the size of the network message from the source to fetch the data

    -sg,--step-granularity <STEP_GRANULARITY>                   defines the granularity of the transfer

    -out,--step-output <STEP_OUTPUT>                            The resource that is passed as output

    -tbs,--target-batch-size <TARGET_BATCH_SIZE>                defines the batch size against the target data resource

    -tcf,--target-commit-frequency <TARGET_COMMIT_FREQUENCY>    defines the commit frequency in number of batches against the target data resource

    -to,--target-operation <TARGET_OPERATION>                   defines the data operations (replace, truncate) on the existing target before transfer.

    -twc,--target-worker-count <TARGET_WORKER_COUNT>            defines the target number of thread against the target datastore

    -tcm,--transfer-column-mapping <TRANSFER_COLUMN_MAPPING>    defines the column mapping between the source and the target

    -tmm,--transfer-mapping-method <TRANSFER_MAPPING_METHOD>    defines the method used to map the source columns to the target columns

    -op,--transfer-operation <TRANSFER_OPERATION>               defines the transfer operation (insert, update, delete, upsert, merge, move, copy). Default to `copy` for a file system and `insert` for a database.

    -wbv,--with-bind-variables                                  defines if bind variables are used in the SQL statement


  Fill Options:

    -gs,--generator-selector <generatorSelector...>             One or more data selector that selects one or more data resource generator ( --datagen.yml )

    -mrc,--max-record-count <maxRecordCount>                    This option defines the maximum total number of record that the data resource(s) must have when no data resource generator was found.


  Data Definition Options:

    -ta,--target-attribute <attributeName=value>                Set a target data resource attribute


  Selection Options:

    -wd,--with-dependencies                                     If this flag is present, the dependencies of the selected target tables (ie parent/foreign tables) will be also be filled with data


  Global Options:

    -vf,--conf <path>                                           The path to a configuration file

    -e,--env <env>                                              The name of the environment

    -h,--help                                                   Print this help

    -l,--log-level <error|warning|tip|info|fine>                Set the log level

    -ns,--not-strict                                            A minor error will not stop the process.

    -odu,--output-data-uri <outputDataUri>                      defines the output data uri for the feedback data (default: console)

    -oo,--output-operation <dataOperation>                      defines the data operations (replace, truncate) on an existing output resource before transfer.

    -oop,--output-transfer-operation <transferOperation>        defines the output transfer operation (insert, update, merge, copy). Default to `copy` for a file system and `insert` for a database.

    -pp,--passphrase <passphrase>                               A passphrase (master password) to decrypt the encrypted vault values (Env: TABUL_PASSPHRASE)

    -ph,--project-home <path>                                   The project home (default to the .tabul.yml file directory)

    -v,--version                                                Print version information
</console>
</unit>
